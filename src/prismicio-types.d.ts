// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from '@prismicio/client';

type Simplify<T> = { [KeyType in keyof T]: T[KeyType] };

type PageDocumentDataSlicesSlice = PageContentSlice | TestSliceSlice;

/**
 * Content for page documents
 */
interface PageDocumentData {
	/**
	 * Slice Zone field in *page*
	 *
	 * - **Field Type**: Slice Zone
	 * - **Placeholder**: *None*
	 * - **API ID Path**: page.slices[]
	 * - **Tab**: Main
	 * - **Documentation**: https://prismic.io/docs/field#slices
	 */
	slices: prismic.SliceZone<PageDocumentDataSlicesSlice>
	/**
	 * Meta Description field in *page*
	 *
	 * - **Field Type**: Text
	 * - **Placeholder**: A brief summary of the page
	 * - **API ID Path**: page.meta_description
	 * - **Tab**: SEO & Metadata
	 * - **Documentation**: https://prismic.io/docs/field#key-text
	 */;
	meta_description: prismic.KeyTextField;

	/**
	 * Meta Image field in *page*
	 *
	 * - **Field Type**: Image
	 * - **Placeholder**: *None*
	 * - **API ID Path**: page.meta_image
	 * - **Tab**: SEO & Metadata
	 * - **Documentation**: https://prismic.io/docs/field#image
	 */
	meta_image: prismic.ImageField<never>;

	/**
	 * Meta Title field in *page*
	 *
	 * - **Field Type**: Text
	 * - **Placeholder**: A title of the page used for social media and search engines
	 * - **API ID Path**: page.meta_title
	 * - **Tab**: SEO & Metadata
	 * - **Documentation**: https://prismic.io/docs/field#key-text
	 */
	meta_title: prismic.KeyTextField;
}

/**
 * page document from Prismic
 *
 * - **API ID**: `page`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type PageDocument<Lang extends string = string> = prismic.PrismicDocumentWithUID<
	Simplify<PageDocumentData>,
	'page',
	Lang
>;

export type AllDocumentTypes = PageDocument;

/**
 * Primary content in *PageContent → Primary*
 */
export interface PageContentSliceDefaultPrimary {
	/**
	 * textField field in *PageContent → Primary*
	 *
	 * - **Field Type**: Text
	 * - **Placeholder**: *None*
	 * - **API ID Path**: page_content.primary.textfield
	 * - **Documentation**: https://prismic.io/docs/field#key-text
	 */
	textfield: prismic.KeyTextField;
}

/**
 * Default variation for PageContent Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type PageContentSliceDefault = prismic.SharedSliceVariation<
	'default',
	Simplify<PageContentSliceDefaultPrimary>,
	never
>;

/**
 * Slice variation for *PageContent*
 */
type PageContentSliceVariation = PageContentSliceDefault;

/**
 * PageContent Shared Slice
 *
 * - **API ID**: `page_content`
 * - **Description**: PageContent
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type PageContentSlice = prismic.SharedSlice<'page_content', PageContentSliceVariation>;

/**
 * Primary content in *TestSlice → Items*
 */
export interface TestSliceSliceDefaultItem {
	/**
	 * imageField field in *TestSlice → Items*
	 *
	 * - **Field Type**: Image
	 * - **Placeholder**: *None*
	 * - **API ID Path**: test_slice.items[].imagefield
	 * - **Documentation**: https://prismic.io/docs/field#image
	 */
	imagefield: prismic.ImageField<never>;
}

/**
 * Default variation for TestSlice Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type TestSliceSliceDefault = prismic.SharedSliceVariation<
	'default',
	Record<string, never>,
	Simplify<TestSliceSliceDefaultItem>
>;

/**
 * Slice variation for *TestSlice*
 */
type TestSliceSliceVariation = TestSliceSliceDefault;

/**
 * TestSlice Shared Slice
 *
 * - **API ID**: `test_slice`
 * - **Description**: TestSlice
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type TestSliceSlice = prismic.SharedSlice<'test_slice', TestSliceSliceVariation>;

declare module '@prismicio/client' {
	interface CreateClient {
		(
			repositoryNameOrEndpoint: string,
			options?: prismic.ClientConfig
		): prismic.Client<AllDocumentTypes>;
	}

	namespace Content {
		export type {
			PageDocument,
			PageDocumentData,
			PageDocumentDataSlicesSlice,
			AllDocumentTypes,
			PageContentSlice,
			PageContentSliceDefaultPrimary,
			PageContentSliceVariation,
			PageContentSliceDefault,
			TestSliceSlice,
			TestSliceSliceDefaultItem,
			TestSliceSliceVariation,
			TestSliceSliceDefault
		};
	}
}
